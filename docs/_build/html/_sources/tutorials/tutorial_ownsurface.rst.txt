.. _tutorial_ownsurface:Tutorial 3: Generating surrogate maps on your own surfaces==========================================================While the functions in ``eigenstrapping`` are validated and tested with standardsurface spaces, you can also generate nulls on your own surface `*.gii` or CIFTIformat `*.nii`. This is basically what happens with the subcortical surrogates.You will need:* A single neuroimaging format cortical mesh `*.gii` or CIFTI `*.nii`* A brain map vector, in surface `*.shape.gii` or `*.func.gii` (if it is the    first index) or a delimited `*.txt` file or a numpy array.You would call the functions in exactly the same manner as before, but thistime we're going to use the class `SurfaceEigenstrapping` since we assume youwant to save the eigenmodes and eigenvalues generated from the surface forfuture use.Important^^^^^^^^^If you have installed the ``scikit-sparse`` library, then generating eigenmodeson your own surfaces will be much faster. If this is not installed, then theeigenmodes routines will use `scipy.sparse.linalg.splu` instead (much slower)... code-block:: py        >>> from eigenstrapping import SurfaceEigenstrapping, datasets    >>> native = datasets.load_native()    >>> native    {'surface': '/mnt/eigenstrapping-data/surfaces/100206_space-native_hemi-lh_pial.surf.gii',     'data': '/mnt/eigenstrapping-data/brainmaps/100206_space-native_hemi-lh_corrThickness.shape.gii'}        >>> native_surface = native['surface']    >>> native_data = native['data']    >>> eigen = SurfaceEigenstrapping(                    surface=native_surface,                    data=native_data,                    num_modes=200,                    )    