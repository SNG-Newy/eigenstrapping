
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_surface_examples.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_surface_examples.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_surface_examples.py:


Getting Started
---------------

Quick introduction to brain maps and eigenmodes
===============================================

Patterns on the cortical surface or in the subcortex ("brain maps") more often
than not express with smoothness - spatial autocorrelation. Accounting
for this in statistical testing of the associations between or the influence
that one brain map has on another is a non-trivial problem. More recently,
methods that account for smoothness have been developed, but these carry their own
issues (see our `paper <https://null.null>`_ for an in-depth discussion on this topic).

Eigenmodes of a surface encode all pairwise (auto)correlations (i.e., smoothness).
The reason for this is too maths heavy for a quick intro, but suffice to say
that this has been discussed many times by people smarter than the people who came up with
this method (see :ref:`References <references>`).

Eigenstrapping offers a solution by leveraging this fact, and another property of
eigenmodes: they are orthogonal. By taking random rotations of them, one can
create new brain maps with the same smoothness but randomized topology. The steps
below will help you get started and build your own surrogate maps.

.. GENERATED FROM PYTHON SOURCE LINES 27-84



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_surface_examples_001.png
         :alt: 4.00
         :srcset: /auto_examples/images/sphx_glr_plot_surface_examples_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_surface_examples_002.png
         :alt: 4.00
         :srcset: /auto_examples/images/sphx_glr_plot_surface_examples_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading data from https://files.osf.io/v1/resources/mabr9/providers/osfstorage/65668144aa3a762736d6ab2b ...
     ...done. (1 seconds, 0 min)
    Downloading data from https://files.osf.io/v1/resources/mabr9/providers/osfstorage/6566812ff0b8e24c97a9d80c ...
    Downloaded 1277952 of 260655724 bytes (0.5%,  3.4min remaining)    Downloaded 17629184 of 260655724 bytes (6.8%,   27.6s remaining)    Downloaded 37715968 of 260655724 bytes (14.5%,   17.8s remaining)    Downloaded 56164352 of 260655724 bytes (21.5%,   14.8s remaining)    Downloaded 75563008 of 260655724 bytes (29.0%,   12.5s remaining)    Downloaded 94552064 of 260655724 bytes (36.3%,   10.7s remaining)    Downloaded 115392512 of 260655724 bytes (44.3%,    8.9s remaining)    Downloaded 131735552 of 260655724 bytes (50.5%,    8.0s remaining)    Downloaded 151166976 of 260655724 bytes (58.0%,    6.6s remaining)    Downloaded 169222144 of 260655724 bytes (64.9%,    5.5s remaining)    Downloaded 189546496 of 260655724 bytes (72.7%,    4.2s remaining)    Downloaded 207044608 of 260655724 bytes (79.4%,    3.2s remaining)    Downloaded 226459648 of 260655724 bytes (86.9%,    2.0s remaining)    Downloaded 242802688 of 260655724 bytes (93.2%,    1.0s remaining) ...done. (16 seconds, 0 min)
    Downloading data from https://files.osf.io/v1/resources/mabr9/providers/osfstorage/6566812479d42829de3e864c ...
     ...done. (1 seconds, 0 min)
    Downloading data from https://files.osf.io/v1/resources/mabr9/providers/osfstorage/65668144932b9f48b2760891 ...
     ...done. (3 seconds, 0 min)
    Downloading data from https://files.osf.io/v1/resources/mabr9/providers/osfstorage/6566812ef0b8e24c97a9d80a ...
    Downloaded 1294336 of 261166559 bytes (0.5%,  3.4min remaining)    Downloaded 17432576 of 261166559 bytes (6.7%,   28.0s remaining)    Downloaded 34914304 of 261166559 bytes (13.4%,   19.8s remaining)    Downloaded 54353920 of 261166559 bytes (20.8%,   15.5s remaining)    Downloaded 71049216 of 261166559 bytes (27.2%,   13.6s remaining)    Downloaded 89554944 of 261166559 bytes (34.3%,   11.9s remaining)    Downloaded 109977600 of 261166559 bytes (42.1%,    9.9s remaining)    Downloaded 127721472 of 261166559 bytes (48.9%,    8.7s remaining)    Downloaded 145342464 of 261166559 bytes (55.7%,    7.5s remaining)    Downloaded 165920768 of 261166559 bytes (63.5%,    6.0s remaining)    Downloaded 183418880 of 261166559 bytes (70.2%,    4.9s remaining)    Downloaded 202833920 of 261166559 bytes (77.7%,    3.6s remaining)    Downloaded 220495872 of 261166559 bytes (84.4%,    2.5s remaining)    Downloaded 238878720 of 261166559 bytes (91.5%,    1.4s remaining)    Downloaded 257556480 of 261166559 bytes (98.6%,    0.2s remaining) ...done. (18 seconds, 0 min)
    Downloading data from https://files.osf.io/v1/resources/mabr9/providers/osfstorage/65668124932b9f48b276087f ...
     ...done. (2 seconds, 0 min)
    /home/runner/eigenstrapping-data/surfaces/space-fsaverage_den-10k_hemi-lh_pial.surf.gii
    (10242,)
    (10242, 1000)
    (1000,)
    Downloading data from https://files.osf.io/v1/resources/4mw3a/providers/osfstorage/60b684ab9096b7021b63cf6b ...
     ...done. (1 seconds, 0 min)
    Extracting data from /home/runner/neuromaps-data/e38b96d96273aa064c22296eda1e5688/fsaverage10k.tar.gz..... done.
    No surface given, expecting precomputed eigenvalues and eigenmodes
    IMPORTANT: EIGENMODES MUST BE TRUNCATED AT FIRST NON-ZERO MODE FOR THIS FUNCTION TO WORK

    (<Figure size 900x600 with 3 Axes>, <Axes3D: >)





|

.. code-block:: Python

    # Input data types
    # ================

    # ``eigenstrapping`` requires a few inputs:

    # * A brain map, i.e., a one-dimensional vector, and either:

    # * A surface mesh, i.e., a set of vertices and face indices
    # * A set of eigenmodes and corresponding eigenvalues
    
    # For the first run, we will load all of these files from the example dataset,
    # but let's assume that these files have already been generated. 

    # ``eigenstrapping`` can handle a variety of inputs:

    # * Delimited `*.txt` files
    # * Neuroimaging files such as `*.nii`, `*.gii`, or `*scalar.gii`
    # * Data and memory-mapped distance matrices written to `*.npy` files
    # * Numpy arrays and array-like objects

    # First run
    # =========

    # The package comes with example surfaces (and their eigenmodes) and cortical gradient data 
    # from Margulies' 2015 paper (see :ref:`References <references>`). Let's start by importing the data (this may take
    # a few moments):

    from eigenstrapping.datasets import load_surface_examples

    surf_lh, surf_rh, data_lh, data_rh, emodes_lh, emodes_rh, evals_lh, evals_rh = load_surface_examples(with_surface=True)
    print(surf_lh)
 
    print(data_lh.shape)
    
    print(emodes_lh.shape)
    
    print(evals_lh.shape)
    
    #Now let's plot the data on the surface.

    from eigenstrapping.plotting import csplot
    
    csplot(data_lh, 'fsaverage')

    #Now let's make a surrogate brain map and plot it on the surface.

    from eigenstrapping import SurfaceEigenstrapping
    
    eigen = SurfaceEigenstrapping(
                        data=data_lh,
                        emodes=emodes_lh,
                        evals=evals_lh,
                        num_modes=100,
                        resample=True,
                        )
    surr = eigen.generate()
    
    csplot(surr, 'fsaverage')

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 51.604 seconds)


.. _sphx_glr_download_auto_examples_plot_surface_examples.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_surface_examples.ipynb <plot_surface_examples.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_surface_examples.py <plot_surface_examples.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
